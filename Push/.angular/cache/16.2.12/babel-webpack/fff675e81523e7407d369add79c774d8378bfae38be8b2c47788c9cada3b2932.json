{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nfunction PmfPushPage_ion_card_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-card\", 5);\n    i0.ɵɵlistener(\"click\", function PmfPushPage_ion_card_7_Template_ion_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const options_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._register_device(options_r1.id));\n    });\n    i0.ɵɵelementStart(1, \"ion-card-header\")(2, \"ion-card-subtitle\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const options_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(options_r1.title);\n  }\n}\nlet PmfPushPage = /*#__PURE__*/(() => {\n  class PmfPushPage {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.URL = '../../assets/data/push_options.json';\n      this.items = [];\n      this.wlInitOptions = {\n        // Options to initialize with the WL.Client object.\n        // For initialization options please refer to IBM MobileFirst Platform Foundation Knowledge Center.\n        mfpContextRoot: '/mfp',\n        applicationId: 'com.mfp.push.app'\n      };\n      this.options = {\n        \"categories\": {\n          \"Category_Name1\": [{\n            \"buttonLabel\": \"Accept\",\n            \"buttonName\": \"Accept\",\n            \"iconName\": \"IconName_1\"\n          }, {\n            \"buttonLabel\": \"Reject\",\n            \"buttonName\": \"Reject\",\n            \"iconName\": \"IconName_2\"\n          }],\n          \"Category_Name2\": [{\n            \"buttonLabel\": \"Ok\",\n            \"buttonName\": \"Ok\",\n            \"iconName\": \"IconName_3\"\n          }, {\n            \"buttonLabel\": \"Cancle\",\n            \"buttonName\": \"Cancle\",\n            \"iconName\": \"IconName_4\"\n          }]\n        }\n      };\n    }\n    ngOnInit() {\n      this.httpClient.get(this.URL).subscribe(res => {\n        this.items = res;\n        console.warn(this.items);\n      });\n      this._initialise_plugin();\n    }\n    _initialise_plugin() {\n      var options = {};\n      MFPPush.initialize(function (successResponse) {\n        console.log(\"Successfully intialized\", successResponse);\n        //MFPPush.registerNotificationsCallback(notificationReceived);\n      }, function (failureResponse) {\n        console.log(\"Failed to initialize\");\n      }, options);\n    }\n    _register_device(id) {\n      if (id === 1) {\n        console.log('register device');\n        WLAuthorizationManager.obtainAccessToken(\"push.mobileclient\").then(function (accessToken) {\n          console.log(\"Successfully accessToken granted\", JSON.stringify(accessToken));\n          try {\n            MFPPush.registerDevice(null, function (successResponse) {\n              console.log(\"Successfully registered\", JSON.stringify(successResponse));\n              alert(\"Device Successfully registered\");\n              //enableButtons();\n            }, function (failureResponse) {\n              console.log(\"Failed to register\", failureResponse);\n              alert(\"Failed to register device\");\n              console.log(\"Failed to register device:\" + JSON.stringify(failureResponse));\n            });\n          } catch (error) {\n            alert('error--' + error);\n          }\n        });\n      } else if (id === 2) {\n        var tags = ['sample-tag1', 'sample-tag2'];\n        WLAuthorizationManager.obtainAccessToken(\"push.mobileclient\").then(MFPPush.subscribe(tags, function (tags) {\n          alert(\"Subscribed successfully\");\n        }, function (failureResponse) {\n          alert(\"Failed to subscribe\");\n          console.log(\"Failed to subscribe:\" + JSON.stringify(failureResponse));\n        }));\n      } else if (id === 3) {\n        WLAuthorizationManager.obtainAccessToken(\"push.mobileclient\").then(MFPPush.getTags(function (newTags) {\n          tags = newTags;\n          alert(JSON.stringify(tags));\n        }, function (failureResponse) {\n          alert(\"Failed to get tags\");\n          console.log(\"Failed to get tags:\" + JSON.stringify(failureResponse));\n        }));\n      } else if (id === 5) {\n        MFPPush.isPushSupported(function (successResponse) {\n          alert(\"Push Supported: \" + successResponse);\n        }, function (failureResponse) {\n          alert(\"Failed to get push support status\" + failureResponse);\n        });\n      } else {\n        WLAuthorizationManager.obtainAccessToken(\"push.mobileclient\").then(MFPPush.unregisterDevice(function (successResponse) {\n          alert(\"Unregistered successfully\");\n        }, function (failureResponse) {\n          alert(\"Failed to unregister\");\n          console.log(\"Failed to unregister:\" + JSON.stringify(failureResponse));\n        }));\n      }\n    }\n    static #_ = this.ɵfac = function PmfPushPage_Factory(t) {\n      return new (t || PmfPushPage)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PmfPushPage,\n      selectors: [[\"app-pmf-push\"]],\n      decls: 8,\n      vars: 3,\n      consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"mode\", \"ios\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mode\", \"ios\", 3, \"click\"], [2, \"font-size\", \"20px\"]],\n      template: function PmfPushPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-back-button\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Push Notifications\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\", 3);\n          i0.ɵɵtemplate(7, PmfPushPage_ion_card_7_Template, 4, 1, \"ion-card\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.IonButtons, i3.IonCard, i3.IonCardHeader, i3.IonCardSubtitle, i3.IonContent, i3.IonHeader, i3.IonTitle, i3.IonToolbar, i3.IonBackButton],\n      styles: [\"ion-toolbar[_ngcontent-%COMP%]{--background: #F55C07;--color: white}\"]\n    });\n  }\n  return PmfPushPage;\n})();\nexport { PmfPushPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}