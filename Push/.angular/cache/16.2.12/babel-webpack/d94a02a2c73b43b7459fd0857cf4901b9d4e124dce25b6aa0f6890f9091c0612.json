{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nlet AnalyticsPage = /*#__PURE__*/(() => {\n  class AnalyticsPage {\n    constructor() {}\n    ngOnInit() {\n      WL.Analytics.triggerFeedbackMode;\n    }\n    _analytics_feedback() {\n      console.log('Feedback button called');\n      // WL.Client.setHeartBeatInterval(10);\n      WL.Analytics.triggerFeedbackMode();\n      WL.Analytics.log(\"Hello from analytics message\");\n      // Send logs to the Mobile Analytics\n      WL.Analytics.send();\n    }\n    static #_ = this.ɵfac = function AnalyticsPage_Factory(t) {\n      return new (t || AnalyticsPage)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AnalyticsPage,\n      selectors: [[\"app-analytics\"]],\n      decls: 9,\n      vars: 1,\n      consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [\"expand\", \"block\", 3, \"click\"]],\n      template: function AnalyticsPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-back-button\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Analytics\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-button\", 3);\n          i0.ɵɵlistener(\"click\", function AnalyticsPage_Template_ion_button_click_7_listener() {\n            return ctx._analytics_feedback();\n          });\n          i0.ɵɵtext(8, \"Send Feedback\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n        }\n      },\n      dependencies: [i1.IonButton, i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonTitle, i1.IonToolbar, i1.IonBackButton],\n      styles: [\"ion-toolbar[_ngcontent-%COMP%]{--background: #F55C07;--color: white}\"]\n    });\n  }\n  return AnalyticsPage;\n})();\nexport { AnalyticsPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}