{"ast":null,"code":"import _asyncToGenerator from \"/Users/shrivallabhdeshmukh/Desktop/PMF/Cordova-Framework-Dev/Cordova-Sample-Final/SeperateSamples/Push/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nlet LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(show_alert, ngZone, router, loader) {\n      this.show_alert = show_alert;\n      this.ngZone = ngZone;\n      this.router = router;\n      this.loader = loader;\n      this.name = \"\";\n      this.password = \"\";\n      this.isChallenged = false;\n      this.isLoggedIn = false;\n    }\n    ngOnInit() {}\n    _login() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        var _this = _this2;\n        var securityCheckName = 'UserLogin';\n        //this.router.navigate(['/getbalance']);\n        if (_this2.name == \"\" || _this2.password == \"\") {\n          alert('Please enter username and password');\n        } else {\n          _this2.show_loading();\n          WLAuthorizationManager.login(securityCheckName, {\n            'username': _this2.name,\n            'password': _this2.password\n          }).then( /*#__PURE__*/_asyncToGenerator(function* () {\n            console.log(\"login onSuccess\");\n            _this2.hide_loader();\n            _this2.router.navigate(['/getbalance']);\n          }), response => {\n            _this2.hide_loader();\n            console.log(\"login onFailure: \" + JSON.stringify(response));\n            alert(\"Wrong username or password\");\n          });\n        }\n      })();\n    }\n    _create_security_check() {\n      var securityCheckName = 'UserLogin';\n      var userLoginChallengeHandler = WL.Client.createSecurityCheckChallengeHandler(securityCheckName);\n      userLoginChallengeHandler.securityCheckName = securityCheckName;\n    }\n    show_loading() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const loading = yield _this3.loader.create({\n          message: 'Logging in...'\n        });\n        loading.present();\n      })();\n    }\n    hide_loader() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        return yield _this4.loader.dismiss().then(() => console.log('dismissed'));\n      })();\n    }\n    static #_ = this.ɵfac = function LoginPage_Factory(t) {\n      return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i1.LoadingController));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginPage,\n      selectors: [[\"app-login\"]],\n      decls: 17,\n      vars: 4,\n      consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"mode\", \"ios\"], [\"label\", \"Username\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"label\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"expand\", \"block\", 3, \"click\"]],\n      template: function LoginPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-back-button\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Login\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"div\")(8, \"ion-card\", 4)(9, \"ion-card-content\")(10, \"ion-item\")(11, \"ion-input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_11_listener($event) {\n            return ctx.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"ion-item\")(13, \"ion-input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_13_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(14, \"br\");\n          i0.ɵɵelementStart(15, \"ion-button\", 7);\n          i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_15_listener() {\n            return ctx._login();\n          });\n          i0.ɵɵtext(16, \"Login\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n        }\n      },\n      dependencies: [i3.NgControlStatus, i3.NgModel, i1.IonButton, i1.IonButtons, i1.IonCard, i1.IonCardContent, i1.IonContent, i1.IonHeader, i1.IonInput, i1.IonItem, i1.IonTitle, i1.IonToolbar, i1.TextValueAccessor, i1.IonBackButton],\n      styles: [\"ion-toolbar[_ngcontent-%COMP%]{--background: #F55C07;--color: white}\"]\n    });\n  }\n  return LoginPage;\n})();\nexport { LoginPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}